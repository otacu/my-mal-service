input {
  jdbc {
    animeType => "mal_anime"
    jdbc_connection_string => "jdbc:mysql://localhost:3306/python?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC"
    jdbc_user => "admin"
    jdbc_password => "123456"
    jdbc_driver_library => "../mal-anime/mysql-connector-java-8.0.17.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_paging_enabled => true
    jdbc_fetch_size => 100
    jdbc_page_size => 100000
    jdbc_default_timezone =>"Asia/Shanghai"
    statement => "select anime_id animeId,en_name enName,jp_name jpName,pic,animeType animeType,episodes,premiered,producers,studios,source from tb_myanimelist_anime"
    # 设置监听间隔  各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新
    schedule => "53 17 * * *"
    # 是否记录上次执行结果, 如果为真,将会把上次执行到的 tracking_column 字段的值记录下来,保存到 last_run_metadata_path 指定的文件中
    #record_last_run => true
    # 是否需要记录某个column 的值,如果record_last_run为真,可以自定义我们需要 track 的 column 名称，此时该参数就要为 true. 否则默认 track 的是 timestamp 的值.
    #use_column_value => true
    # 如果 use_column_value 为真,需配置此参数. track 的数据库 column 名,该 column 必须是递增的. 一般是mysql主键
    #tracking_column => "updatedAt"
    #tracking_column_type => "timestamp"
    #last_run_metadata_path => "../mal-anime/logstash_mal_anime_last_id"
    # 是否每次同步都清理，最好为false，否则每次同步都是全量同步
    clean_run => true
    #是否将字段名称转换为小写, 默认是true
    lowercase_column_names => false
  }
}

output {
  if[animeType]=="mal_anime"{
    elasticsearch {
      hosts => "localhost:9200"
      index => "index_mal_anime"
      document_id => "%{animeId}"
      manage_template => true
      template_overwrite => true
      template_name => "index_mal_anime"
      template => "../mal-anime/template_mal_anime.json"
    }
  }
  stdout {
    codec => json_lines
  }
}